# Edge Nginx reverse proxy with HTTPS termination and CORS

# Allowed origins for CORS (production-ready: real domains only)
map $http_origin $cors_origin {
    default "";
    ~^https?://(localhost|127\.0\.0\.1)(:\d+)?$ $http_origin;
    ~^https?://axionax\.io$ $http_origin;
    ~^https?://testnet\.axionax\.io$ $http_origin;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=rpc_limit:10m rate=30r/s;
limit_req_zone $binary_remote_addr zone=faucet_limit:10m rate=1r/m;

# Docker DNS resolver (for proxy_pass by name)
resolver 127.0.0.11 ipv6=off;

# HTTP → HTTPS redirect (any host)
server {
    listen 80;
    listen [::]:80;
    server_name _;

    location /.well-known/acme-challenge/ {
        root /var/www/webroot;
        try_files $uri =404;
    }
    
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS vhost: axionax.io (mainnet/public site)
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name axionax.io;

    # Domain-specific certs (fallback to self-signed until real certs provisioned)
    ssl_certificate     /etc/nginx/certs/axionax.io/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/axionax.io/privkey.pem;
    
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
    ssl_prefer_server_ciphers on;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;
    ssl_session_tickets off;

    # Security headers
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header Referrer-Policy no-referrer-when-downgrade always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Service targets (server context)
    set $svc_ui http://ui:80;
    set $svc_rpc http://hardhat:8545;
    set $svc_faucet http://faucet:8081;
    set $svc_blockscout_api http://blockscout:4000;
    set $svc_blockscout_frontend http://blockscout-frontend:80;
    set $svc_proto http://proto:8082;

    # Root → UI
    location / {
        proxy_pass $svc_ui/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
    }

    # RPC with CORS + rate limiting
    location = /rpc { return 307 /rpc/; }
    location /rpc/ {
        limit_req zone=rpc_limit burst=10 nodelay;
        
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
            add_header 'Access-Control-Max-Age' 86400 always;
            return 204;
        }
        
        proxy_pass $svc_rpc/;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
    }

    # Faucet with CORS + rate limiting
    location = /faucet { return 307 /faucet/; }
    location /faucet/ {
        limit_req zone=faucet_limit burst=2 nodelay;
        
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
            add_header 'Access-Control-Max-Age' 86400 always;
            return 204;
        }
        
        proxy_pass $svc_faucet/;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header Authorization $http_authorization;
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
    }

    # Blockscout API with CORS
    location = /blockscout-api { return 307 /blockscout-api/; }
    location /blockscout-api/ {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type' always;
            add_header 'Access-Control-Max-Age' 86400 always;
            return 204;
        }
        
        proxy_pass $svc_blockscout_api/;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
    }

    # Explorer UI
    location = /explorer { return 307 /explorer/; }
    location /explorer/ {
        proxy_pass $svc_blockscout_frontend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
    }

    # Proto RPC with CORS
    location = /proto-rpc { return 307 /proto-rpc/; }
    location /proto-rpc/ {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type' always;
            add_header 'Access-Control-Max-Age' 86400 always;
            return 204;
        }
        
        proxy_pass $svc_proto/;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
    }
}

# HTTPS vhost: testnet.axionax.io
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name testnet.axionax.io;

    # Domain-specific certs (fallback to self-signed until real certs provisioned)
    ssl_certificate     /etc/nginx/certs/testnet.axionax.io/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/testnet.axionax.io/privkey.pem;
    
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
    ssl_prefer_server_ciphers on;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;
    ssl_session_tickets off;

    # Security headers
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header Referrer-Policy no-referrer-when-downgrade always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Service targets (server context)
    set $svc_ui http://ui:80;
    set $svc_rpc http://hardhat:8545;
    set $svc_faucet http://faucet:8081;
    set $svc_blockscout_api http://blockscout:4000;
    set $svc_blockscout_frontend http://blockscout-frontend:80;
    set $svc_proto http://proto:8082;

  location / { proxy_pass $svc_ui/; proxy_set_header Host $host; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto https; }
    location = /rpc { return 307 /rpc/; }
    location /rpc/ {
      if ($request_method = 'OPTIONS') { add_header 'Access-Control-Allow-Origin' $cors_origin always; add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always; add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always; add_header 'Access-Control-Max-Age' 86400 always; return 204; }
  proxy_pass $svc_rpc/; proxy_http_version 1.1; proxy_set_header Connection ""; add_header 'Access-Control-Allow-Origin' $cors_origin always; add_header 'Access-Control-Allow-Credentials' 'true' always;
    }
    location = /faucet { return 307 /faucet/; }
    location /faucet/ {
      if ($request_method = 'OPTIONS') { add_header 'Access-Control-Allow-Origin' $cors_origin always; add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always; add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always; add_header 'Access-Control-Max-Age' 86400 always; return 204; }
  proxy_pass $svc_faucet/; proxy_http_version 1.1; proxy_set_header Connection ""; add_header 'Access-Control-Allow-Origin' $cors_origin always; add_header 'Access-Control-Allow-Credentials' 'true' always;
    }
    location = /proto-rpc { return 307 /proto-rpc/; }
    location /proto-rpc/ {
      if ($request_method = 'OPTIONS') { add_header 'Access-Control-Allow-Origin' $cors_origin always; add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always; add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always; add_header 'Access-Control-Max-Age' 86400 always; return 204; }
      proxy_pass $svc_proto/; proxy_http_version 1.1; proxy_set_header Connection ""; add_header 'Access-Control-Allow-Origin' $cors_origin always; add_header 'Access-Control-Allow-Credentials' 'true' always;
    }
    location = /blockscout-api { return 307 /blockscout-api/; }
    location /blockscout-api/ {
      if ($request_method = 'OPTIONS') { add_header 'Access-Control-Allow-Origin' $cors_origin always; add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always; add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always; add_header 'Access-Control-Max-Age' 86400 always; return 204; }
  proxy_pass $svc_blockscout_api/; proxy_http_version 1.1; proxy_set_header Connection ""; add_header 'Access-Control-Allow-Origin' $cors_origin always; add_header 'Access-Control-Allow-Credentials' 'true' always;
    }
    location = /explorer { return 307 /explorer/; }
  location /explorer/ { proxy_pass $svc_blockscout_frontend/; proxy_set_header Host $host; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto https; }
}

# Fallback HTTPS for localhost/self-signed
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name _;

  # Service targets (server context)
  set $svc_ui http://ui:80;
  set $svc_rpc http://hardhat:8545;
  set $svc_faucet http://faucet:8081;
  set $svc_blockscout_api http://blockscout:4000;
  set $svc_blockscout_frontend http://blockscout-frontend:80;
  set $svc_proto http://proto:8082;

    ssl_certificate     /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;
    ssl_session_tickets off;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;

    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header Referrer-Policy no-referrer-when-downgrade always;

  location / { proxy_pass $svc_ui/; proxy_set_header Host $host; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto https; }
    location = /rpc { return 307 /rpc/; }
    location /rpc/ {
      if ($request_method = 'OPTIONS') { add_header 'Access-Control-Allow-Origin' $cors_origin always; add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always; add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always; add_header 'Access-Control-Max-Age' 86400 always; return 204; }
  proxy_pass $svc_rpc/; proxy_http_version 1.1; proxy_set_header Connection ""; add_header 'Access-Control-Allow-Origin' $cors_origin always; add_header 'Access-Control-Allow-Credentials' 'true' always;
    }
    location = /faucet { return 307 /faucet/; }
    location /faucet/ {
      if ($request_method = 'OPTIONS') { add_header 'Access-Control-Allow-Origin' $cors_origin always; add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always; add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always; add_header 'Access-Control-Max-Age' 86400 always; return 204; }
  proxy_pass $svc_faucet/; proxy_http_version 1.1; proxy_set_header Connection ""; add_header 'Access-Control-Allow-Origin' $cors_origin always; add_header 'Access-Control-Allow-Credentials' 'true' always;
    }
    location = /proto-rpc { return 307 /proto-rpc/; }
    location /proto-rpc/ {
      if ($request_method = 'OPTIONS') { add_header 'Access-Control-Allow-Origin' $cors_origin always; add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always; add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always; add_header 'Access-Control-Max-Age' 86400 always; return 204; }
      proxy_pass $svc_proto/; proxy_http_version 1.1; proxy_set_header Connection ""; add_header 'Access-Control-Allow-Origin' $cors_origin always; add_header 'Access-Control-Allow-Credentials' 'true' always;
    }
    location = /blockscout-api { return 307 /blockscout-api/; }
    location /blockscout-api/ {
      if ($request_method = 'OPTIONS') { add_header 'Access-Control-Allow-Origin' $cors_origin always; add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always; add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always; add_header 'Access-Control-Max-Age' 86400 always; return 204; }
  proxy_pass $svc_blockscout_api/; proxy_http_version 1.1; proxy_set_header Connection ""; add_header 'Access-Control-Allow-Origin' $cors_origin always; add_header 'Access-Control-Allow-Credentials' 'true' always;
    }
    location = /explorer { return 307 /explorer/; }
  location /explorer/ { proxy_pass $svc_blockscout_frontend/; proxy_set_header Host $host; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto https; }
}
