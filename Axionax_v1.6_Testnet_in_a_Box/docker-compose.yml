services:
  axionax-node:
    build:
      context: ../
      dockerfile: ./Axionax_v1.6_Testnet_in_a_Box/Dockerfile
    ports:
      - "127.0.0.1:8545:8545"
      - "30303:30303" # Expose default p2p port
    volumes:
      - axionax-data:/data
    command: >
      /usr/local/bin/axionax-node
        --state-path /data
        --rpc-addr 0.0.0.0:8545
        --chain-id 86137
    restart: unless-stopped

  deployer:
    image: node:18-bullseye
    working_dir: /app
    environment:
      RPC_URL: http://axionax-node:8545
    command: >
      bash -lc "if [ -f package-lock.json ]; then npm ci; else npm i; fi;
      if [ -f deploy_token.js ]; then node deploy_token.js || true; else npm start || true; fi"
    volumes:
      - ./deployer:/app
    depends_on:
      - axionax-node
    restart: on-failure

  faucet:
    image: node:18-bullseye
    working_dir: /app
    environment:
      RPC_URL: http://axionax-node:8545
      CHAIN_ID: "86137"
    command: >
      bash -lc "if [ -f package-lock.json ]; then npm ci; else npm i; fi; node index.js"
    ports:
      - "127.0.0.1:8081:8081"
    volumes:
      - ./faucet:/app
      - faucet-node-modules:/app/node_modules
    depends_on:
      - axionax-node
    restart: unless-stopped

  ui:
    image: nginx:alpine
    ports:
      - "127.0.0.1:8080:80"
    volumes:
      - ./ui:/usr/share/nginx/html:ro
      - ./ui/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - faucet
      - blockscout

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: blockscout
      POSTGRES_PASSWORD: blockscout
      POSTGRES_DB: blockscout
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U blockscout -d blockscout"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 10s
    restart: unless-stopped

  blockscout:
    image: ghcr.io/blockscout/blockscout:latest
    depends_on:
      postgres:
        condition: service_healthy
      axionax-node:
        condition: service_started
    environment:
      MIX_ENV: prod
      # Database
      DATABASE_URL: postgresql://blockscout:blockscout@postgres:5432/blockscout
      ECTO_USE_SSL: "false"
      # UI
      DISABLE_WEBAPP: "false"
      # Chain / RPC
      ETHEREUM_JSONRPC_HTTP_URL: http://axionax-node:8545
      ETHEREUM_JSONRPC_WS_URL:   ws://axionax-node:8545
      ETHEREUM_JSONRPC_TRACE_URL: http://axionax-node:8545
      ETHEREUM_JSONRPC_VARIANT: geth
      CHAIN_ID: "86137"
      NETWORK: "Axionax Local Testnet v1.6"
      SUBNETWORK: "Rust"
      COIN: "AXX"
      # Web
      SECRET_KEY_BASE: pd1+T03FiW54uPGlkL+xx5U3alkXpgky+kP1/55JyElDiOM1LMnAl7s2ueF4/rQ4m6xkwmjtnIoC2VMYb0+kJg==
      PORT: "4000"
      # Optional: speed up dev/local indexer by disabling extras
      DISABLE_EXCHANGE_RATES: "true"
      DISABLE_SOURCIFY_INTEGRATION: "true"
      INDEXER_DISABLE_TOKEN_INSTANCE_FETCHER: "true"
      INDEXER_DISABLE_TOKEN_BALANCE_FUNGIBLE_FETCHER: "true"
    ports:
      - "127.0.0.1:4000:4000"
    command: >
      /bin/sh -lc "
        /app/bin/blockscout eval 'Elixir.Explorer.ReleaseTasks.create_and_migrate()' &&
        /app/bin/blockscout start
      "
    restart: unless-stopped

  blockscout-frontend:
    image: ghcr.io/blockscout/frontend:latest
    environment:
      # Point the frontend (running in your browser) to the backend API URL
      NEXT_PUBLIC_API_URL: /blockscout-api
      NEXT_PUBLIC_NETWORK_NAME: "Axionax Local Testnet v1.6"
      NEXT_PUBLIC_CHAIN_ID: "86137"
      NEXT_PUBLIC_BASE_PATH: "/explorer"
    depends_on:
      - blockscout
    ports:
      - "127.0.0.1:4001:80"
    restart: unless-stopped

volumes:
  axionax-data:
  pgdata:
  faucet-node-modules:
